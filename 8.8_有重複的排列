#include <iostream>
#include <vector>
#include <string>
#include <unordered_map>

std::unordered_map<char,int> builtMap(std::string str){
  std::unordered_map<char,int> map;
  if((int)str.length()==0){ return map; }
  for(char c:str){
    if(map.find(c)==map.end()){ map[c] = 1; }
    else{ int count = map[c]; map[c] = count+1; }
  }
  return map;
}

void getPerm(std::unordered_map<char,int> map, std::string s, int len,std::vector<std::string>& result){
  if(len==0){result.push_back(s); return;}

  for(auto it=map.begin();it!=map.end(); it++){
    char c = (*it).first;

    if((*it).second>0){
      int num = map[c]; map[c] = num-1;

      getPerm(map,s+c,len-1,result);
      //for(auto str:output){ str = c+str; }

      int count = map[c]; map[c] = count+1;
    } 
    
  }
   
}

int main(){
  std::string str = "aab";
  std::unordered_map<char,int> map = builtMap(str);
  std::vector<std::string> output{};
 
  getPerm(map,"",(int)str.length(),output);
  for(auto s:output){ std::cout<<s<<", "; }
  std::cout<<std::endl;
  
  return 0;
}
